syntax = "proto3";

option csharp_namespace = "ChessGrpc";

package chessGrpc;

// All available ChessServices
service ChessGame {

  // When a move is made in the game by the client
  rpc MakeMove (MakeMoveRequest) returns (MakeMoveResponse);

  // Client asks server if it made a move
  rpc GetGameUpdate (GameStatusRequest) returns (GameStatusResponse);

  rpc VerifyMove (VerifyMoveRequest) returns (VerifyMoveResponse);

  rpc GetMove ( GetMoveRequest ) returns (GetMoveResponse);

  rpc EndGame ( EndGameRequest ) returns (EndGameResponse);

  rpc GetAllMoves ( GetAllMovesRequest) returns (GetAllMovesResponse);

}

service ChessMatchmaking {

  // When clients requests to start a new game
  rpc StartGame (StartGameRequest) returns (StartGameResponse);

}


// Request to start game
message StartGameRequest {
  string player_name = 1; // Name of the User
}

// Response to started game
message StartGameResponse {
  string game_id = 1;     // Unique ID of game
  string player_color = 2; // Assigned colour for the Client
}

// Request when Client made a move
message MakeMoveRequest {
  string game_id = 1;     // Unique ID of game
  string player_name = 2; // Name of the User
  string piece = 3;        // Identifies the chessPiece (e.g. black Knight1: [ bN1 ])
  string moveOrigin = 4; // The chess field on which the piece is moved to (e.g.: a4)
  string moveDestination = 5;
}

// Response to client move
message MakeMoveResponse {
  bool success = 1;       // If move was successful: true
  string message = 2;     // Message when error occured
}

// Client asks if Server made a move
message GameStatusRequest {
  string game_id = 1;     //
}

// Server Sends Response with the move made
message GameStatusResponse {
  string game_id = 1;
  string status = 2;
  string current_turn = 3;
  string white_player = 4;
  string black_player = 5;
  string last_moveId = 6;
  string last_moveOrigin = 7;
  string last_moveDesination = 8;
  bool isVerified = 9;
}

// Client asks if Server made a move
message VerifyMoveRequest {
  string game_id = 1;     //
  bool opponent_answer = 2;
}

// Client asks if Server made a move
message VerifyMoveResponse {
  bool success = 1;     //
}

message GetMoveRequest {
  string moveId = 1;     //
}

message GetMoveResponse {
  bool success = 1;
  string game_id = 2;
  string player_name = 3;
  string piece = 4;
  string moveOrigin = 5;
  string moveDestination = 6;
  string moveTime = 7;
}

message EndGameRequest{
  string game_id = 1;
}

message EndGameResponse {
  bool success = 1;
}


message GetAllMovesRequest {
  string game_id = 1;
}

message SingleMove {
  string piece = 2;
  string moveOrigin = 3;
  string moveDestination = 4;
}

message GetAllMovesResponse {
  repeated SingleMove moves = 1;
}